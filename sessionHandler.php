<?php
/*
 * --------========PHP INI-settings========--------
 * session.cookie_httponly=On		Disables JavaScript access to cookies
 * session.cookie_lifetime=0		Tells browsers not to store cookie to permanent storage(must be 0).
 * session.cookie_secure=True		Allows access to session ID cookie only when the connection is HTTPS.
 * session.use_cookies=On			Allows using cookies to store session id on the client side.
 * session.use_only_cookies=On		If disabled the session will send session ID values over GET/POST/URL!
 * session.use_strict_mode=On		Prevents the session module to use uninitialized session ID(session module only accepts valid session ID generated by session module).
 * session.use_trans_sid=Off		Disables transparent session ID management.
 *
 * These settings help protect against session hijacking.
 */
 

class SessionManager extends SessionHandler{
	
	protected $key, $name, $cookie;
	
	public function __construct($key, $name = 'THIS_SESSION'){
		
		$this->key = $key;
		$this->name = $name;
		$this->cookie = [
			'lifetime' => 0,
            'path'     => ini_get('session.cookie_path'),
            'domain'   => ini_get('session.cookie_domain'),
            'secure'   => isset($_SERVER['HTTPS']),
            'httponly' => true
		];
		
		$this->setup();
		
	}
	
	protected function setup(){
		ini_set('session.use_cookies', 1);
        ini_set('session.use_only_cookies', 1);
		
		session_name($this->name);
		
		session_set_cookie_params(
            $this->cookie['lifetime'], $this->cookie['path'],
            $this->cookie['domain'], $this->cookie['secure'],
            $this->cookie['httponly']
        );
	}
}